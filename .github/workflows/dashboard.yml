name: deploy-dashboard

on:
  push:
    branches:
      - main
    paths:
      - 'packages/dashboard/**'
  workflow_dispatch:

defaults:
  run:
    working-directory: packages/dashboard

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - run: npm install
      - run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - run: aws s3 sync dist s3://${{ secrets.AWS_S3_BUCKET_NAME }}/dashboard/latest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/dashboard/latest/remoteEntry.js"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      ### OCI Bucket Upload:

      # Install OCI CLI
      - name: Set up OCI CLI
        run: pip install oci-cli

      # Upload to Oracle Cloud Object Storage
      - name: Upload dist to OCI
        run: |
          oci os object bulk-upload \
            --bucket-name ${{ secrets.OCI_BUCKET_NAME }} \
            --src-dir dist
        env:
          OCI_TENANCY: ${{ secrets.OCI_TENANCY }}
          OCI_USER: ${{ secrets.OCI_USER }}
          OCI_REGION: ${{ secrets.OCI_REGION }}
          OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
          OCI_KEY_CONTENT: ${{ secrets.OCI_KEY_CONTENT }}